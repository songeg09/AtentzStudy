#pragma once

enum class TEXTURE_TYPE
{
	BACKGROUND,
	PLAYER_ATTACK,
	PLAYER_IDLE_START,
	PLAYER_IDLE_1 = PLAYER_IDLE_START,
	PLAYER_IDLE_2,
	PLAYER_IDLE_3,
	PLAYER_IDLE_4,
	PLAYER_IDLE_5,
	PLAYER_IDLE_6,
	PLAYER_IDLE_7,
	PLAYER_IDLE_8,
	PLAYER_IDLE_9,
	PLAYER_IDLE_10,
	PLAYER_IDLE_11,
	PLAYER_IDLE_12,
	PLAYER_IDLE_END = PLAYER_IDLE_12,
	PLAYER_ATTACK_1_START,
	PLAYER_ATTACK_1_1 = PLAYER_ATTACK_1_START,
	PLAYER_ATTACK_1_2,
	PLAYER_ATTACK_1_3,
	PLAYER_ATTACK_1_4,
	PLAYER_ATTACK_1_5,
	PLAYER_ATTACK_1_6,
	PLAYER_ATTACK_1_7,
	PLAYER_ATTACK_1_8,
	PLAYER_ATTACK_1_9,
	PLAYER_ATTACK_1_10,
	PLAYER_ATTACK_1_11,
	PLAYER_ATTACK_1_12,
	PLAYER_ATTACK_1_13,
	PLAYER_ATTACK_1_14,
	PLAYER_ATTACK_1_15,
	PLAYER_ATTACK_1_END = PLAYER_ATTACK_1_15,
	ARROW,
};

class Texture;
class ResourceManager
{
	SINGLETON(ResourceManager)
private:
	std::map<std::string, Texture*> m_MapTexture;
	std::string GetTextureFileName(TEXTURE_TYPE _eTextureType);
public:
	Texture* LoadTexture(TEXTURE_TYPE _eTextureType);
	Texture* FindTexture(const std::string& _strKey);

};

